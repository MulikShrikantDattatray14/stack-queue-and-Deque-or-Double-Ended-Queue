//239. Sliding Window Maximum -
//optimised  code -
let nums = [1, 3, -1, -3, 5, 3, 6, 7];
let k = 3;
// see striver explaination
let ans = maxSlidingWindow(nums, k);
console.log(ans);

function maxSlidingWindow(nums, k) {
  const result = [];
  // in deque, we store index
  const deque = [];

  for (let i = 0; i < nums.length; i++) {
    // Remove elements outside the current window
    while (deque.length > 0 && deque[0] < i - k + 1) {
      //remove from start
      deque.shift();
    }

    // Remove elements smaller than the current element from the back
    while (deque.length > 0 && nums[deque[deque.length - 1]] < nums[i]) {
      // remove from back
      deque.pop();
    }

    // Add the current element index to the deque
    deque.push(i);
    // Add the maximum element for the current window to the result array
    if (i >= k - 1) {
      result.push(nums[deque[0]]);
    }
  }

  return result;
}