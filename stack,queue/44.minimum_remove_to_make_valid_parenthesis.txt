//https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/description/

Given a string s of '(' , ')' and lowercase English characters.

Your task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string.

Formally, a parentheses string is valid if and only if:-

It is the empty string, contains only lowercase characters, or
It can be written as AB (A concatenated with B), where A and B are valid strings, or
It can be written as (A), where A is a valid string.
 

Example 1:-

Input: s = "lee(t(c)o)de)"
Output: "lee(t(c)o)de"
Explanation: "lee(t(co)de)" , "lee(t(c)ode)" would also be accepted.
Example 2:

Input: s = "a)b(c)d"
Output: "ab(c)d"
Example 3:

Input: s = "))(("
Output: ""
Explanation: An empty string is also valid.
 

Constraints:

1 <= s.length <= 105
s[i] is either'(' , ')', or lowercase English letter.
//https://www.youtube.com/watch?v=obdjfsKer0I&t=8s



function minRemoveToMakeValid(s) {
    const n = s.length;

    // Extra closing bracket
    let count = 0;
    for (let i = 0; i < n; ++i) {
        if (s[i] === '(') {
            ++count;
        } else if (s[i] === ')') {
            if (count === 0) {
                s = s.substring(0, i) + '#' + s.substring(i + 1);
            } else {
                --count;
            }
        }
    }

    // Extra opening bracket
    count = 0;
    for (let i = n - 1; i >= 0; --i) {
        if (s[i] === ')') {
            ++count;
        } else if (s[i] === '(') {
            if (count === 0) {
                s = s.substring(0, i) + '#' + s.substring(i + 1);
            } else {
                --count;
            }
        }
    }

    let ans = '';
    for (let i = 0; i < n; ++i) {
        if (s[i] !== '#') {
            ans += s[i];
        }
    }

    return ans;
}

// Example usage:
const inputString = "a(b)c)d";
const result = minRemoveToMakeValid(inputString);
console.log(result);
