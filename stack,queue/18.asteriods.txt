We are given an array asteroids of integers representing asteroids in a row.

For each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.

Find out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.

 

Example 1:

Input: asteroids = [5,10,-5]
Output: [5,10]
Explanation: The 10 and -5 collide resulting in 10. The 5 and 10 never collide.
Example 2:

Input: asteroids = [8,-8]
Output: []
Explanation: The 8 and -8 collide exploding each other.
Example 3:

Input: asteroids = [10,2,-5]
Output: [10]
Explanation: The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.

//https://www.youtube.com/watch?v=Y82zCeJft-Q

// positive asteriods move towards right and negative asteriod moves towards left.

function collision(asteroids) {
  const stack = [];
  // will go from right to left
  for (const val of asteroids) {
    if (val > 0) {
      //positive value gets pushed into stack
      stack.push(val);
    } else {
      //stack is not empty && top value is positive && top value is smaller than the -negative value(take "-" infront of the value, so that we can compare "-" and "-" becomes "+")
      while (
        stack.length > 0 &&
        stack[stack.length - 1] > 0 &&
        stack[stack.length - 1] < -val
      ) {
        //keep popping the  the top element as it gets destroyed by the greater negative element.
        stack.pop();
      }

      ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      //stack is not empty && top element is positive but equal to negative value.
      if (stack.length > 0 && stack[stack.length - 1] === -val) {
        //remove form the stack but dnt add the val into stack , positive element gets destroyed .
        stack.pop();
      } else if (stack.length > 0 && stack[stack.length - 1] > -val) {
        // Do nothing- bcz stack is not empty and and the top element is positive and greater and so it destroys the negative value and so no changes happens.
      } else {
        // nothing in stack or is in same direction
        // for input -[1,2,-5] , output is [-5]
        stack.push(val);
      }
    }
  }

  const ans = new Array(stack.length);
  // presever the order that was in stack
  let i = ans.length - 1;

  while (i >= 0) {
    ans[i--] = stack.pop();
  }

  return ans;
}

// Example usage:
const asteroids = [5, 10, -5];
const result = collision(asteroids);
console.log(result);
